import React from "react";
import {Col, Container, Row} from "react-bootstrap";

export function Exercise() {
    return (
        <>
            <Container className="mt-4">
                <Row>
                    <Col>
                        Переписать приложение <a href="https://github.com/Olegshipu95/weblab3-jsf-hibernate">из предыдущей лабораторной работы</a> с использованием следующих технологий:
                    </Col>
                    <div className="w-100"/>
                    <Col className="offset-md-1">
                        - Уровень back-end должен быть основан на Spring.
                    </Col>
                    <div className="w-100"/>
                    <Col className="offset-md-1">
                        - Уровень front-end должен быть построен на React + Redux (необходимо использовать ES6 и JSX) с использованием обычных полей ввода HTML
                    </Col >
                    <div className="w-100"/>
                    <Col className="offset-md-1">
                        - Взаимодействие между уровнями back-end и front-end должно быть организовано посредством REST API.
                    </Col>
                    <div className="w-100"/>
                    <Col className="mt-4">
                        Приложение по-прежнему должно включать в себя 2 страницы - стартовую и основную страницу приложения. Обе страницы приложения должны быть адаптированы для отображения в 3 режимах:
                    </Col>
                    <div className="w-100"/>
                    <Col className="offset-md-1 mt-2">
                        - "Десктопный" - для устройств, ширина экрана которых равна или превышает 1189 пикселей.
                    </Col>
                    <div className="w-100"/>
                    <Col className="offset-md-1">
                        - "Планшетный" - для устройств, ширина экрана которых равна или превышает 706, но меньше 1189 пикселей.
                    </Col>
                    <div className="w-100"/>
                    <Col className="offset-md-1">
                        - "Мобильный"- для устройств, ширина экрана которых меньше 706 пикселей.
                    </Col>
                    <div className="w-100"/>
                    <Col className="mt-4">
                        <strong>Стартовая страница должна содержать следующие элементы:</strong>
                    </Col>
                    <div className="w-100"/>
                    <Col className="offset-md-1 mt-2">
                        - "Шапку", содержащую ФИО студента, номер группы и номер варианта.
                    </Col>
                    <div className="w-100"/>
                    <Col className="offset-md-1">
                        - Форму для ввода логина и пароля. Информация о зарегистрированных в системе пользователях должна храниться в отдельной таблице БД (пароль должен храниться в виде хэш-суммы). Доступ неавторизованных пользователей к основной странице приложения должен быть запрещён.
                    </Col>
                    <div className="w-100"/>
                    <Col className="mt-4">
                        <strong>Основная страница приложения должна содержать следующие элементы:</strong>
                    </Col>
                    <div className="w-100"/>
                    <Col className="offset-md-1 mt-2">
                        - Набор полей ввода для задания координат точки и радиуса области в соответствии с вариантом задания: Select {"{'-2','-1.5','-1','-0.5','0','0.5','1','1.5','2'}"} для координаты по оси X, Text (-5 ... 5) для координаты по оси Y, и Select {"{'-2','-1.5','-1','-0.5','0','0.5','1','1.5','2'}"} для задания радиуса области. Если поле ввода допускает ввод заведомо некорректных данных (таких, например, как буквы в координатах точки или отрицательный радиус), то приложение должно осуществлять их валидацию.
                    </Col>
                    <div className="w-100"/>
                    <Col className="offset-md-1">
                        - Динамически обновляемую картинку, изображающую область на координатной плоскости в соответствии с номером варианта и точки, координаты которых были заданы пользователем. Клик по картинке должен инициировать сценарий, осуществляющий определение координат новой точки и отправку их на сервер для проверки её попадания в область. Цвет точек должен зависить от факта попадания / непопадания в область. Смена радиуса также должна инициировать перерисовку картинки.
                    </Col>
                    <div className="w-100"/>
                    <Col className="offset-md-1">
                        - Таблицу со списком результатов предыдущих проверок.
                    </Col>
                    <div className="w-100"/>
                    <Col className="offset-md-1">
                        - Ссылку, по которой аутентифицированный пользователь может закрыть свою сессию и вернуться на стартовую страницу приложения.
                    </Col>
                    <div className="w-100"/>
                    <Col className="mt-4">
                        <strong>Дополнительные требования к приложению:</strong>
                    </Col>
                    <div className="w-100"/>
                    <Col className="offset-md-1 mt-2">
                        - Все результаты проверки должны сохраняться в базе данных под управлением СУБД PostgreSQL.
                    </Col>
                    <div className="w-100"/>
                    <Col className="offset-md-1">
                        - Для доступа к БД необходимо использовать Spring Data.
                    </Col>
                    <div className="w-100"/>
                    <Col className="mt-4 offset-md-3">
                        <img className="my-var mb-4 position-relative" src="/resources/img/my-var.png" alt="my-var"/>
                    </Col>
                </Row>
            </Container>
        </>
    )
}